# kern/Kconfig

comment "Kernel options"

source "kern/hal/Kconfig"

menu "Memory Management"

menu "Physical memory layout"

config configKSTACK_START
    hex "P kstack start"
    default 0x00001000
    range 0x00001000 0x00001000
    ---help---
    See configKSTACK_END.

config configKSTACK_END
    hex "P kstack end"
    default 0x00007fff
    range 0x00007fff 0x00007fff
    ---help---
    Kernel interrupt stacks used when the kernel enters to a kernel mode due to
    a received interrupt.

config configKERNEL_START
    hex "P kernel caddr start"
    default 0x00008000

config configKERNEL_END
    hex "P kernel caddr end"
    default 0x003fffff

config configPT_AREA_START
    hex "P Page table area start"
    default 0x00400000
    depends on configMMU

config configPT_AREA_END
    hex "P Page table area end"
    default 0x007FFFFF
    depends on configMMU

config configDYNMEM_START
    hex "P dynmem start"
    default 0x00800000
    ---help---
    Dynmem is the memory area used for dynamic memory allocations, for both
    memory used inside the kernel as well as memory passed to the user space.
    Though dynmem allocations are rarely used as such and some higher level
    memory allocator us used instead, eg. vralloc (buf.h).

config configDYNMEM_SIZE
    hex "dynmem size"
    default 0x800000
    ---help---
    Size of the dynmem memory area, must be less than the total available memory
    on the hardware.

endmenu

menu "Kernel virtual layout"

config configTKSTACK_START
    hex "V tkstack vaddr start"
    default 0x00001000
    range 0x00000000 0x00001000
    depends on configMMU
    ---help---
    See help on configTKSTACK_END.

config configTKSTACK_END
    hex "V tkstack vaddr end"
    default 0x00001fff
    range 0x00000fff 0x00001fff
    depends on configMMU
    ---help---
    Thread kernel stack starts from here. Currently this stack addr must be
    within the first megabyte of the virtual memory address space.

config configKSECT_START
    hex "V ksect start"
    default 0x30000000
    ---help---
        Ksects, kernel dynamic virtual sections, are mainly mainly used to
        access memory mapped IO by using strongly ordered access on
        the virtual ksect address.

config configKSECT_END
    hex "V ksect end"
    default 0x50000000
 
endmenu

menu "User process memory layout"

config configEXEC_BASE_LIMIT
    hex "Exec base address low limit"
    default 0x10000000
    ---help---
    Lowest base address allowed for loading sections from a binary file.

config configUENV_BASE_ADDR
    hex "Args & environ page base address"
    default 0x0FFFF000
    --help---
    Base address for process arguments and environment.

endmenu

endmenu

source "kern/sched/Kconfig"

menu "Processes"

config configMAXPROC
    int "maxproc"
    default 50
    ---help---
    Maximum number of processes in the system. The value should be big enough
    because it can't be changed on runtime.

config configPROC_STACK_DFL
    int "Stack default size"
    default 8192
    ---help---
    Default stack size of a new process main().

config configCOW_ENABLED
    bool "Enable copy-on-write for processes"
    default y
    ---help---
    Selects whether process memory regions shall be copied on demand as COW
    (Copy-On-Write) or immediately when a process is forked.

config configCORE_DUMPS
    bool "Core dump support"
    default y
    ---help---
    Add a core dump support for processes. If this feature is enabled a core
    dump support is added to the kernel and certain signals will cause a core
    dump to be stored by default.

    This should be enable normally. It might be necessary to disable this to
    get a minimal system or if a system has only read-only file systems.

menu "Default hard limits"

config configRLIMIT_CORE
    int "RLIMIT_CORE"
    default -1
    ---help---
    Maximum size of a core file, in bytes.

    -1 is no limit.

config configRLIMIT_CPU
    int "RLIMIT_CPU"
    default -1
    ---help---
    Max amount of CPU time limit.

    -1 is no limit.

config configRLIMIT_DATA
    int "RLIMIT_DATA"
    default -1
    ---help---
    Data segment size limit.

    -1 is no limit.

config configRLIMIT_FSIZE
    int "configRLIMIT_FSIZE"
    default -1
    ---help---
    File size limit of a process.

    -1 is no limit.

config configRLIMIT_NOFILE
    int "RLIMIT_NOFILE"
    range 8 1024
    default 16
    ---help---
    Limit on number of open files.

    Can't be infinite (-1).

config configRLIMIT_STACK
    int RLIMIT_STACK
    default -1
    ---help---
    Maximum size of stack for a thread, in bytes.

    -1 is no limit.

config configRLIMIT_AS
    int "RLIMIT_AS"
    default -1
    ---help---
    Limit on address space size of a process.

    -1 is no limit.

endmenu

endmenu


menu "Generic"

config configTIMERS_MAX
    int "Maximum number of kernel timers"
    default 128
    range 15 65535
    ---help---
    Maximum number of kernel timers available.

config configUSRINIT_SSIZE
    int "init stack size"
    default 8192
    ---help---
    Stack size for init process main() thread.

config configRCU_SYNC_HZ
    int "RCU synchronization interval [ms]"
    default 1000
    ---help---
    Automatic RCU synchronization runs once per interval set here, toggles the
    clock and reclaims any unreclaimed garbage assigned to the previus reclaim
    list.

    Set to 0 to disable automatic synchronization.

endmenu

menu "Kernel debugging"

config configKASSERT
    bool "Kernel asserts"
    default n
    ---help---
    Enable KASSERT asserts in the kernel. Selecting this option will slightly
    slow down the kernel.

config configKMEM_DEBUG
    bool "kmem debug"
    default n
    ---help---
    Enable kmem init debug messages.

config configVRALLOC_DEBUG
    bool "vralloc debug"
    default n
    ---help---
    Enable additional debugging assertions in vralloc.

config configLOCK_DEBUG
    bool "klock debugging"
    default n
    ---help---
    Debug kernel locks.

config configKLOCK_DLTHRES
    int "Klock deadlock detection threshold"
    default 19
    depends on configLOCK_DEBUG
    ---help---
    Try to detect spinlock deadlocks by using a try counter. Setting this option
    to zero disables the deadlock detection.

endmenu

source "kern/kerror/Kconfig"

source "kern/fs/Kconfig"


menu "Security"

config configSUSER
    bool "Enable super user privileges"
    default n
    ---help---
    Processes with uid 0 have privilege by default. This knob sets default value
    of suser_enabled sysctl variable to one.

    If suser_enabled is set to zero, uid 0 is offers no special privilege in
    the kernel security policy in most of the places. It can be also set at
    runtime by using sysctl interface.

    If unsure, say Y.

config configBOOT_SECURELEVEL
    int "Securelevel at boot"
    default 0

endmenu


source "kern/libkern/Kconfig"
source "kern/kunit/Kconfig"
